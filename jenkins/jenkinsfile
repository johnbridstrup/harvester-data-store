pipeline {
    agent { label 'aft-nuc || aft-gpu || aft-swemu' }
    
    stages {
        stage('Initialization') {
			steps {
				script { env.totalExitCode = 0 }
			}
		}
        stage('Run tests') {
            when {
				branch 'PR-*'
			}
            steps {
                catchError(stageResult: 'FAILURE') {
                    script {
                        def exitCode = sh script:'./jenkins/run_tests.sh', returnStatus:true
                        env.totalExitCode = (env.totalExitCode).toInteger() + exitCode
                        sh "exit ${exitCode}"
                    }
                }
            }
        }
        stage('Check build') {
            when {branch 'PR-*'}
            steps {
                catchError(stageResult: 'FAILURE') {
                    script {
                        def exitCode = sh script:'./jenkins/ci.sh', returnStatus:true
                        env.totalExitCode = (env.totalExitCode).toInteger() + exitCode
                        sh "exit ${exitCode}"
                    }
                }
            }
        }
    }
    post {
		always {
            script {
                currentBuild.result = ((env.totalExitCode).toInteger() == 0) ? "SUCCESS" : "FAILURE"
                sh "sudo docker compose down"
            }
		}
	}
}