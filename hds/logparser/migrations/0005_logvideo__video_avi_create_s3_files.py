# Generated by Django 4.0.4 on 2023-01-12 21:08

import structlog

from django.core.paginator import Paginator
from django.db import migrations, models
import django.db.models.deletion

from common.utils import get_key

logger = structlog.get_logger(__name__)


def create_s3files(apps, schema_editor):
    LogVideo = apps.get_model("logparser", "LogVideo")
    S3File = apps.get_model("s3file", "s3file")
    User = apps.get_model("auth", "User")

    paginator = Paginator(LogVideo.objects.all(), 1000)
    logger.info("Creating S3Files from LogVideos")
    for page in range(1, paginator.num_pages + 1):
        logger.info(f"Page {page}")
        for logvideo in paginator.page(page).object_list:
            creator = User.objects.get(id=logvideo.creator.id)
            key = get_key(logvideo.video_avi)
            try:
                s3file_data = {
                    "key": key,
                    "filetype": "sessclip-mp4",
                    "file": logvideo.video_avi,
                    "creator": creator,
                }
            except ValueError:
                logger.info(
                    f"No file associated with LogSession ID {logvideo.id}"
                )
                continue
            event = logvideo.log_session._zip_file.file.event
            s3file = S3File.objects.create(**s3file_data, event=event)
            logvideo._video_avi = s3file
            logvideo.save()


class Migration(migrations.Migration):

    dependencies = [
        ("s3file", "0005_sessclip"),
        ("logparser", "0004_remove_logsession_zip_file"),
    ]

    operations = [
        migrations.AddField(
            model_name="logvideo",
            name="_video_avi",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="s3file.s3file",
            ),
        ),
        migrations.RunPython(create_s3files),
    ]
